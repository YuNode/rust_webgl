[package]
name = "rust-wasm-webgl"
version = "0.1.0"
authors = ["yu <playzxy@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
futures = "0.1.20"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.3.25"
js-sys = "0.3"
mat4 = "0.2"
gmath = "0.1.1"
cgmath = "0.17.0"
num-traits = "0.2"
wavefront_obj = "6.0.0"
gltf = "0.13.0"
half = "0.1.0"
byteorder = "0.4.2"
clap = "2.0.2"
base64 = "0.10.1"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }


[dependencies.web-sys]
version = "0.3"
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'MouseEvent',
  'WheelEvent',
  'Node',
  'Window',
  'WebGlBuffer',
  'WebGlRenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'console',
  'Event',
  'MouseEventInit',
  'KeyboardEvent',
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

